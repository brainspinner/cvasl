name: Sanity
on: [push]

jobs:
  Sanity:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ['ubuntu-latest']
        python-version: ['3.10', '3.11']
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Connect to Container Registry
        uses: docker/login-action@v2.1.0
        with:
          registry: ghcr.io
          username: brainspinner
          password: ${{ secrets.GITHUBTOKEN }}
      - name: Run Tests in Container
        run: >
          docker run
          --rm
          -v ${{ github.workspace }}:/ci
          --cap-add=SYS_ADMIN
          --privileged=true
          ghcr.io/brainspinner/cvaslimage:latest
          sh -c '
            set -xe
            mount --bind /cvasl/test_data/ /ci/test_data/
            cd /ci
            python ./setup.py test'

  Lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - uses: s-weigand/setup-conda@v1
        with:
          conda-channels: conda-forge
          python-version: '3.11'
      - run: python3 -m venv .venv
      - run: .venv/bin/python -m pip install wheel
      - run: .venv/bin/python setup.py lint

  # Documentation:
  #   permissions:
  #     contents: write

  #   on:
  #     push:
  #       branches:
  #       - main
  #       - drcandacemakedamoore/publicdocu
  #     pull_request:
  #       types: [opened, synchronize, reopened, ready_for_review]
  #       branches:
  #       - main
  #       - drcandacemakedamoore/publicdocu

  Build-documentation:
    if: github.event.pull_request.draft == false
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
        
    permissions:
      contents: write

      on:
        push:
        branches:
         - main
         - drcandacemakedamoore/publicdocu
       pull_request:
         types: [opened, synchronize, reopened, ready_for_review]
         branches:
          - main
          - drcandacemakedamoore/publicdocu
      steps:
        - uses: actions/checkout@v2
        - name: Set up Python 3.10
          uses: actions/setup-python@v2
          with:
            python-version: '3.10'
        - name: Python info
          shell: bash -l {0}
          run: |
            which python3
            python3 --version
        - name: Upgrade pip and install dependencies
          run: |
            python3 -m pip install --upgrade pip setuptools
            python3 -m pip install .[dev,publishing]
        - name: Install pandoc using apt
          run: sudo apt install pandoc
        - name: Build documentation
          run: make html
          working-directory: docs
        - name: Publish Docs to Pages
          uses: JamesIves/github-pages-deploy-action@4.1.1
          with:
            branch: gh-pages
            folder: build/sphinx/html
  # Sphinx:
  #   runs-on: ubuntu-latest

  #   steps:
  #     - uses: actions/checkout@v3
  #       with:
  #         fetch-depth: 0
  #         submodules: recursive
  #     - uses: s-weigand/setup-conda@v1
  #       with:
  #         conda-channels: conda-forge
  #         python-version: '3.10'
  #     - run: python3 -m venv .venv
  #     - run: .venv/bin/python -m pip install wheel sphinx
  #     - run: .venv/bin/python setup.py install
  #     - run: .venv/bin/python setup.py apidoc
  #     - run: .venv/bin/python setup.py build_sphinx -W
  #     - name: Publish Docs to Pages
  #       uses: JamesIves/github-pages-deploy-action@4.1.1
  #       with:
  #         branch: gh-pages
  #         folder: build/sphinx/html

  # Fair-software:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: fair-software/howfairis-github-action@0.2.1
  #       name: Measure compliance with fair-software.eu recommendations
  #       env:
  #         PYCHARM_HOSTED: "Trick colorama into displaying colored output" 
  #       with:
  #         MY_REPO_URL: "https://github.com/${{ github.repository }}"

  # Markdown: 
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@main
  #   - uses: gaurav-nelson/github-action-markdown-link-check@v1
  #     with:
  #       config-file: '.github/workflows/mlc-config.json'