name: Sanity
on: [push]

jobs:
  SanityOnDocker:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # TODO: Add image with Python 3.10 so that we can test with
        # both supported versions of python.

        # python-version: ['3.10', '3.11']
        python-version: ['3.11']
        include:
          # - python-version: '3.10'
          #   tox-python: "py310"
          - python-version: '3.11'
            tox-python: 'py311'
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Connect to Container Registry
        uses: docker/login-action@v2.1.0
        with:
          registry: ghcr.io
          username: brainspinner
          password: ${{ secrets.GITHUBTOKEN }}
      - name: Run Tests in Container
        run: >
          docker run
          --rm
          -v ${{ github.workspace }}:/ci
          --cap-add=SYS_ADMIN
          --privileged=true
          ghcr.io/brainspinner/cvaslimage:latest
          sh -c '
            set -xe
            mount --bind /cvasl/test_data/ /ci/test_data/
            cd /ci
            python -m pip install tox
            python -m tox -e  ${{ matrix.tox-python }} \
            -- tests/test_core.py'
  SanityOnMulti:
      runs-on: ${{ matrix.os }}
      strategy:
        matrix:
          os: [ubuntu-latest, macos-latest, windows-latest]
          python-version: ['3.10', '3.11']
          include:
            - python-version: '3.10'
              tox-python: "py310"
            # - python-version: '3.11'
            #   tox-python: 'py311'
            - os: windows-latest
              python: .venv/Scripts/python.exe
            - os: ubuntu-latest
              python: .venv/bin/python
            - os: macos-latest
              python: .venv/bin/python
      # steps:
      #   - uses: actions/checkout@v3
      #     with:
      #       submodules: recursive
      #   - uses: s-weigand/setup-conda@v1
      #     with:
      #       conda-channels: conda-forge
      #       python-version: ${{ matrix.python-version }}
      #   - run: python3 -m venv .venv
      #   - run: ${{ matrix.python }} -m pip install tox
      #   - run: >
      #       ${{ matrix.python }} -m tox -e ${{ matrix.tox-python }}
      #       -- tests/test_multi.py
      steps:
        - uses: actions/checkout@v3
          with:
            submodules: recursive
        - uses: conda-incubator/setup-miniconda@v3
          with:
            python-version: ${{ matrix.python-version }}
            auto-activate-base: false
            activate-environment: ci
            channels: conda-forge
        - run: python -m pip install tox
        - run: >
            python -m tox -e ${{ matrix.tox-python }}
            -- tests/test_multi.py
      
  Lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - uses: s-weigand/setup-conda@v1
        with:
          conda-channels: conda-forge
          python-version: '3.11'
      - run: python3 -m venv .venv
      - run: .venv/bin/python -m pip install wheel  
      - run: .venv/bin/python -m pip install pycodestyle "pytest<8.1"
      - run: .venv/bin/python setup.py lint

  Sphinx:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: recursive
      - uses: s-weigand/setup-conda@v1
        with:
          conda-channels: conda-forge
          python-version: '3.10'
      - run: python3 -m venv .venv
      - run: .venv/bin/python -m pip install wheel
      - run: .venv/bin/python setup.py bdist_wheel
      - run: .venv/bin/python -m pip install ./dist/*.whl
      - run: .venv/bin/python -m pip install sphinx piccolo_theme
      - run: .venv/bin/python setup.py apidoc
      - run: .venv/bin/python setup.py build_sphinx -W
      - name: Publish Docs to Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages
          folder: build/sphinx/html  

  # Fair-software:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: fair-software/howfairis-github-action@0.2.1
  #       name: Measure compliance with fair-software.eu recommendations
  #       env:
  #         PYCHARM_HOSTED: "Trick colorama into displaying colored output" 
  #       with:
  #         MY_REPO_URL: "https://github.com/${{ github.repository }}"

  # Markdown: 
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@main
  #   - uses: gaurav-nelson/github-action-markdown-link-check@v1
  #     with:
  #       config-file: '.github/workflows/mlc-config.json'
