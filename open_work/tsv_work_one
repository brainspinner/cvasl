{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "a6fec917-48cc-4817-866f-18765dfb1a9b",
   "metadata": {},
   "source": [
    "# Exploring TSV files`"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2555294b-361f-4c7b-9ad3-10d856c2026c",
   "metadata": {},
   "source": [
    "### Imports"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "00118c2d-23b6-4b35-bdf7-6e262ea1b0f5",
   "metadata": {},
   "outputs": [],
   "source": [
    "import os       # using operating system dependent functionality (folders)\n",
    "import glob\n",
    "import pandas as pd # data analysis and manipulation\n",
    "import numpy as np    # numerical computing (manipulating and performing operations on arrays of data)\n",
    "import copy     # Can Copy and Deepcopy files so original file is untouched.\n",
    "from ipywidgets import IntSlider, Output\n",
    "import ipywidgets as widgets\n",
    "from IPython.display import display\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "\n",
    "import sys\n",
    "sys.path.insert(0, '../') # path to functions\n",
    "from cvasl import file_handler as fh # \n",
    "from cvasl import mold #\n",
    "from cvasl import carve\n",
    "from cvasl.file_handler import Config"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "45184ed6-98b1-4278-803e-3f5e5a86b606",
   "metadata": {},
   "source": [
    "### Configure data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "65589de5-a6a2-4bb7-a62e-f2efc73551c1",
   "metadata": {},
   "outputs": [],
   "source": [
    "config = Config()\n",
    "root_mri_directory = config.get_directory('raw_data')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e5820c2d-4dd3-4d6f-a9d8-e46de3931144",
   "metadata": {
    "tags": []
   },
   "source": [
    "### Load tsv files"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "9c8a0b2f-7fb6-4dda-bc9c-b12cf34d4b3b",
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "tsv_pattern = os.path.join(root_mri_directory, '**/*.tsv')\n",
    "tsv_files = glob.glob(tsv_pattern, recursive=True)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1afaca8a-d28c-47e2-9864-8e0b6edd132b",
   "metadata": {},
   "source": [
    "### check tsv files"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "2733448f-67bd-4058-83ca-24c8e45b4a6d",
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "dataframe_example = pd.read_csv(tsv_files[0], sep='\\t')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "985b16ed-5b4e-4eee-a757-ef8584aa5cbd",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>participant_id</th>\n",
       "      <th>session</th>\n",
       "      <th>LongitudinalTimePoint</th>\n",
       "      <th>SubjectNList</th>\n",
       "      <th>Site</th>\n",
       "      <th>GM_vol</th>\n",
       "      <th>WM_vol</th>\n",
       "      <th>CSF_vol</th>\n",
       "      <th>GM_ICVRatio</th>\n",
       "      <th>GMWM_ICVRatio</th>\n",
       "      <th>WMH_vol</th>\n",
       "      <th>WMH_count</th>\n",
       "      <th>MeanMotion</th>\n",
       "      <th>DeepWM_B</th>\n",
       "      <th>DeepWM_L</th>\n",
       "      <th>DeepWM_R</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>StudyID</td>\n",
       "      <td>...</td>\n",
       "      <td>integer</td>\n",
       "      <td>integer</td>\n",
       "      <td>integer</td>\n",
       "      <td>Liter</td>\n",
       "      <td>Liter</td>\n",
       "      <td>Liter</td>\n",
       "      <td>ratio GM/ICV</td>\n",
       "      <td>ratio (GM+WM)/ICV</td>\n",
       "      <td>mL</td>\n",
       "      <td>n lesions (integer)</td>\n",
       "      <td>mm</td>\n",
       "      <td>SD/mean</td>\n",
       "      <td>SD/mean</td>\n",
       "      <td>SD/mean</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>sub-100151241_1</td>\n",
       "      <td>ASL_1</td>\n",
       "      <td>TimePoint_1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>sub-100151242_1</td>\n",
       "      <td>ASL_1</td>\n",
       "      <td>TimePoint_1</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>sub-10015124_1</td>\n",
       "      <td>ASL_1</td>\n",
       "      <td>TimePoint_1</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0.56794</td>\n",
       "      <td>0.47687</td>\n",
       "      <td>0.34052</td>\n",
       "      <td>0.40997</td>\n",
       "      <td>0.7542</td>\n",
       "      <td>4.889</td>\n",
       "      <td>16</td>\n",
       "      <td>0.16098</td>\n",
       "      <td>10.9918</td>\n",
       "      <td>10.8279</td>\n",
       "      <td>11.0443</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>sub-10015124_2</td>\n",
       "      <td>ASL_1</td>\n",
       "      <td>TimePoint_2</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0.56664</td>\n",
       "      <td>0.4727</td>\n",
       "      <td>0.34156</td>\n",
       "      <td>0.41034</td>\n",
       "      <td>0.75265</td>\n",
       "      <td>7.444</td>\n",
       "      <td>19</td>\n",
       "      <td>0.17257</td>\n",
       "      <td>7.9018</td>\n",
       "      <td>9.0773</td>\n",
       "      <td>6.8846</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1666</th>\n",
       "      <td>sub-19995714_2</td>\n",
       "      <td>ASL_1</td>\n",
       "      <td>TimePoint_2</td>\n",
       "      <td>1300</td>\n",
       "      <td>1</td>\n",
       "      <td>0.63999</td>\n",
       "      <td>0.54546</td>\n",
       "      <td>0.42336</td>\n",
       "      <td>0.3978</td>\n",
       "      <td>0.73685</td>\n",
       "      <td>1.735</td>\n",
       "      <td>23</td>\n",
       "      <td>0.09423</td>\n",
       "      <td>20.3281</td>\n",
       "      <td>16.4068</td>\n",
       "      <td>25.2544</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1667</th>\n",
       "      <td>sub-199968291_1</td>\n",
       "      <td>ASL_1</td>\n",
       "      <td>TimePoint_1</td>\n",
       "      <td>1301</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1668</th>\n",
       "      <td>sub-199968292_1</td>\n",
       "      <td>ASL_1</td>\n",
       "      <td>TimePoint_1</td>\n",
       "      <td>1302</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1669</th>\n",
       "      <td>sub-19996829_1</td>\n",
       "      <td>ASL_1</td>\n",
       "      <td>TimePoint_1</td>\n",
       "      <td>1303</td>\n",
       "      <td>1</td>\n",
       "      <td>0.52206</td>\n",
       "      <td>0.45926</td>\n",
       "      <td>0.4026</td>\n",
       "      <td>0.37723</td>\n",
       "      <td>0.70909</td>\n",
       "      <td>15.875</td>\n",
       "      <td>41</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1670</th>\n",
       "      <td>sub-19996829_2</td>\n",
       "      <td>ASL_1</td>\n",
       "      <td>TimePoint_2</td>\n",
       "      <td>1303</td>\n",
       "      <td>1</td>\n",
       "      <td>0.50715</td>\n",
       "      <td>0.4394</td>\n",
       "      <td>0.44287</td>\n",
       "      <td>0.36501</td>\n",
       "      <td>0.68126</td>\n",
       "      <td>15.112</td>\n",
       "      <td>38</td>\n",
       "      <td>0.20897</td>\n",
       "      <td>5.4641</td>\n",
       "      <td>5.6187</td>\n",
       "      <td>5.2872</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1671 rows × 16 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       participant_id session LongitudinalTimePoint SubjectNList     Site   \n",
       "0             StudyID     ...               integer      integer  integer  \\\n",
       "1     sub-100151241_1   ASL_1           TimePoint_1            1        1   \n",
       "2     sub-100151242_1   ASL_1           TimePoint_1            2        1   \n",
       "3      sub-10015124_1   ASL_1           TimePoint_1            3        1   \n",
       "4      sub-10015124_2   ASL_1           TimePoint_2            3        1   \n",
       "...               ...     ...                   ...          ...      ...   \n",
       "1666   sub-19995714_2   ASL_1           TimePoint_2         1300        1   \n",
       "1667  sub-199968291_1   ASL_1           TimePoint_1         1301        1   \n",
       "1668  sub-199968292_1   ASL_1           TimePoint_1         1302        1   \n",
       "1669   sub-19996829_1   ASL_1           TimePoint_1         1303        1   \n",
       "1670   sub-19996829_2   ASL_1           TimePoint_2         1303        1   \n",
       "\n",
       "       GM_vol   WM_vol  CSF_vol   GM_ICVRatio      GMWM_ICVRatio WMH_vol   \n",
       "0       Liter    Liter    Liter  ratio GM/ICV  ratio (GM+WM)/ICV      mL  \\\n",
       "1         NaN      NaN      NaN           NaN                NaN     NaN   \n",
       "2         NaN      NaN      NaN           NaN                NaN     NaN   \n",
       "3     0.56794  0.47687  0.34052       0.40997             0.7542   4.889   \n",
       "4     0.56664   0.4727  0.34156       0.41034            0.75265   7.444   \n",
       "...       ...      ...      ...           ...                ...     ...   \n",
       "1666  0.63999  0.54546  0.42336        0.3978            0.73685   1.735   \n",
       "1667      NaN      NaN      NaN           NaN                NaN     NaN   \n",
       "1668      NaN      NaN      NaN           NaN                NaN     NaN   \n",
       "1669  0.52206  0.45926   0.4026       0.37723            0.70909  15.875   \n",
       "1670  0.50715   0.4394  0.44287       0.36501            0.68126  15.112   \n",
       "\n",
       "                WMH_count MeanMotion DeepWM_B DeepWM_L DeepWM_R  \n",
       "0     n lesions (integer)         mm  SD/mean  SD/mean  SD/mean  \n",
       "1                     NaN        NaN        0        0        0  \n",
       "2                     NaN        NaN        0        0        0  \n",
       "3                      16    0.16098  10.9918  10.8279  11.0443  \n",
       "4                      19    0.17257   7.9018   9.0773   6.8846  \n",
       "...                   ...        ...      ...      ...      ...  \n",
       "1666                   23    0.09423  20.3281  16.4068  25.2544  \n",
       "1667                  NaN        NaN      NaN      NaN      NaN  \n",
       "1668                  NaN        NaN      NaN      NaN      NaN  \n",
       "1669                   41        NaN      NaN      NaN      NaN  \n",
       "1670                   38    0.20897   5.4641   5.6187   5.2872  \n",
       "\n",
       "[1671 rows x 16 columns]"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dataframe_example"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "bf95b2ec-2a05-4902-8c8d-5c8aaa5a150e",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['participant_id', 'session', 'LongitudinalTimePoint', 'SubjectNList',\n",
       "       'Site', 'GM_vol', 'WM_vol', 'CSF_vol', 'GM_ICVRatio', 'GMWM_ICVRatio',\n",
       "       'WMH_vol', 'WMH_count', 'MeanMotion', 'DeepWM_B', 'DeepWM_L',\n",
       "       'DeepWM_R'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dataframe_example.columns"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e3c3423a-7446-4152-9233-3df69bb09c19",
   "metadata": {},
   "source": [
    "### Analysis"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2a16340a-2c7e-48b9-8ff3-814f22e5cced",
   "metadata": {},
   "source": [
    "Without the subject ages we can not do an analysis on anything except how subjects progress over time points, and how various parameters predict each other. But let's scan all the tev we were given to see if we have ones with age. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "8b29630f-fde1-4f1a-ac0c-5392c282f199",
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "# columns = []\n",
    "# file_names = []\n",
    "# for file in tsv_files:\n",
    "#     dataframe_example = pd.read_csv(file, sep='\\t')\n",
    "#     #print(dataframe_example.columns)\n",
    "#     columns.append(dataframe_example.columns)\n",
    "#     file_names.append(file)\n",
    "# data_tsv = pd.DataFrame([columns, file_names])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "e7760714-68f1-47e6-a711-0dd4fca8d80e",
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "#data_tsv = data_tsv.T"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b20c8a1b-aae1-4e6d-a164-c4a829ad16df",
   "metadata": {},
   "source": [
    "#### Correlations within datasets:"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f5588ceb-8f73-4b65-8067-6182ab7a69b2",
   "metadata": {},
   "source": [
    "Let's use one dataframe example:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "c80de1cd-3b42-4f36-83d7-171096343201",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['participant_id', 'session', 'LongitudinalTimePoint', 'SubjectNList',\n",
       "       'Site', 'GM_vol', 'WM_vol', 'CSF_vol', 'GM_ICVRatio', 'GMWM_ICVRatio',\n",
       "       'WMH_vol', 'WMH_count', 'MeanMotion', 'DeepWM_B', 'DeepWM_L',\n",
       "       'DeepWM_R'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dataframe_example.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "760c1651-9812-45e0-91cc-1c085f13de6f",
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "dataframe_example_nums_only = dataframe_example[[ \n",
    "    'SubjectNList',\n",
    "    'Site', 'GM_vol', 'WM_vol', 'CSF_vol', 'GM_ICVRatio', 'GMWM_ICVRatio',\n",
    "    'WMH_vol', 'WMH_count', 'MeanMotion', 'DeepWM_B', 'DeepWM_L',\n",
    "    'DeepWM_R']]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "30cd92ae-5e84-42a3-abb0-628db078f651",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>SubjectNList</th>\n",
       "      <th>Site</th>\n",
       "      <th>GM_vol</th>\n",
       "      <th>WM_vol</th>\n",
       "      <th>CSF_vol</th>\n",
       "      <th>GM_ICVRatio</th>\n",
       "      <th>GMWM_ICVRatio</th>\n",
       "      <th>WMH_vol</th>\n",
       "      <th>WMH_count</th>\n",
       "      <th>MeanMotion</th>\n",
       "      <th>DeepWM_B</th>\n",
       "      <th>DeepWM_L</th>\n",
       "      <th>DeepWM_R</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>integer</td>\n",
       "      <td>integer</td>\n",
       "      <td>Liter</td>\n",
       "      <td>Liter</td>\n",
       "      <td>Liter</td>\n",
       "      <td>ratio GM/ICV</td>\n",
       "      <td>ratio (GM+WM)/ICV</td>\n",
       "      <td>mL</td>\n",
       "      <td>n lesions (integer)</td>\n",
       "      <td>mm</td>\n",
       "      <td>SD/mean</td>\n",
       "      <td>SD/mean</td>\n",
       "      <td>SD/mean</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0.56794</td>\n",
       "      <td>0.47687</td>\n",
       "      <td>0.34052</td>\n",
       "      <td>0.40997</td>\n",
       "      <td>0.7542</td>\n",
       "      <td>4.889</td>\n",
       "      <td>16</td>\n",
       "      <td>0.16098</td>\n",
       "      <td>10.9918</td>\n",
       "      <td>10.8279</td>\n",
       "      <td>11.0443</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0.56664</td>\n",
       "      <td>0.4727</td>\n",
       "      <td>0.34156</td>\n",
       "      <td>0.41034</td>\n",
       "      <td>0.75265</td>\n",
       "      <td>7.444</td>\n",
       "      <td>19</td>\n",
       "      <td>0.17257</td>\n",
       "      <td>7.9018</td>\n",
       "      <td>9.0773</td>\n",
       "      <td>6.8846</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1666</th>\n",
       "      <td>1300</td>\n",
       "      <td>1</td>\n",
       "      <td>0.63999</td>\n",
       "      <td>0.54546</td>\n",
       "      <td>0.42336</td>\n",
       "      <td>0.3978</td>\n",
       "      <td>0.73685</td>\n",
       "      <td>1.735</td>\n",
       "      <td>23</td>\n",
       "      <td>0.09423</td>\n",
       "      <td>20.3281</td>\n",
       "      <td>16.4068</td>\n",
       "      <td>25.2544</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1667</th>\n",
       "      <td>1301</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1668</th>\n",
       "      <td>1302</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1669</th>\n",
       "      <td>1303</td>\n",
       "      <td>1</td>\n",
       "      <td>0.52206</td>\n",
       "      <td>0.45926</td>\n",
       "      <td>0.4026</td>\n",
       "      <td>0.37723</td>\n",
       "      <td>0.70909</td>\n",
       "      <td>15.875</td>\n",
       "      <td>41</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1670</th>\n",
       "      <td>1303</td>\n",
       "      <td>1</td>\n",
       "      <td>0.50715</td>\n",
       "      <td>0.4394</td>\n",
       "      <td>0.44287</td>\n",
       "      <td>0.36501</td>\n",
       "      <td>0.68126</td>\n",
       "      <td>15.112</td>\n",
       "      <td>38</td>\n",
       "      <td>0.20897</td>\n",
       "      <td>5.4641</td>\n",
       "      <td>5.6187</td>\n",
       "      <td>5.2872</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1671 rows × 13 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     SubjectNList     Site   GM_vol   WM_vol  CSF_vol   GM_ICVRatio   \n",
       "0         integer  integer    Liter    Liter    Liter  ratio GM/ICV  \\\n",
       "1               1        1      NaN      NaN      NaN           NaN   \n",
       "2               2        1      NaN      NaN      NaN           NaN   \n",
       "3               3        1  0.56794  0.47687  0.34052       0.40997   \n",
       "4               3        1  0.56664   0.4727  0.34156       0.41034   \n",
       "...           ...      ...      ...      ...      ...           ...   \n",
       "1666         1300        1  0.63999  0.54546  0.42336        0.3978   \n",
       "1667         1301        1      NaN      NaN      NaN           NaN   \n",
       "1668         1302        1      NaN      NaN      NaN           NaN   \n",
       "1669         1303        1  0.52206  0.45926   0.4026       0.37723   \n",
       "1670         1303        1  0.50715   0.4394  0.44287       0.36501   \n",
       "\n",
       "          GMWM_ICVRatio WMH_vol            WMH_count MeanMotion DeepWM_B   \n",
       "0     ratio (GM+WM)/ICV      mL  n lesions (integer)         mm  SD/mean  \\\n",
       "1                   NaN     NaN                  NaN        NaN        0   \n",
       "2                   NaN     NaN                  NaN        NaN        0   \n",
       "3                0.7542   4.889                   16    0.16098  10.9918   \n",
       "4               0.75265   7.444                   19    0.17257   7.9018   \n",
       "...                 ...     ...                  ...        ...      ...   \n",
       "1666            0.73685   1.735                   23    0.09423  20.3281   \n",
       "1667                NaN     NaN                  NaN        NaN      NaN   \n",
       "1668                NaN     NaN                  NaN        NaN      NaN   \n",
       "1669            0.70909  15.875                   41        NaN      NaN   \n",
       "1670            0.68126  15.112                   38    0.20897   5.4641   \n",
       "\n",
       "     DeepWM_L DeepWM_R  \n",
       "0     SD/mean  SD/mean  \n",
       "1           0        0  \n",
       "2           0        0  \n",
       "3     10.8279  11.0443  \n",
       "4      9.0773   6.8846  \n",
       "...       ...      ...  \n",
       "1666  16.4068  25.2544  \n",
       "1667      NaN      NaN  \n",
       "1668      NaN      NaN  \n",
       "1669      NaN      NaN  \n",
       "1670   5.6187   5.2872  \n",
       "\n",
       "[1671 rows x 13 columns]"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dataframe_example_nums_only"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "4bf2534a-b5c2-4215-b331-5f7281aa9db9",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>SubjectNList</th>\n",
       "      <th>Site</th>\n",
       "      <th>GM_vol</th>\n",
       "      <th>WM_vol</th>\n",
       "      <th>CSF_vol</th>\n",
       "      <th>GM_ICVRatio</th>\n",
       "      <th>GMWM_ICVRatio</th>\n",
       "      <th>WMH_vol</th>\n",
       "      <th>WMH_count</th>\n",
       "      <th>MeanMotion</th>\n",
       "      <th>DeepWM_B</th>\n",
       "      <th>DeepWM_L</th>\n",
       "      <th>DeepWM_R</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>SubjectNList</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-0.028381</td>\n",
       "      <td>0.006298</td>\n",
       "      <td>0.025602</td>\n",
       "      <td>-0.056883</td>\n",
       "      <td>-0.032985</td>\n",
       "      <td>-0.017482</td>\n",
       "      <td>0.040220</td>\n",
       "      <td>-0.027960</td>\n",
       "      <td>-0.081494</td>\n",
       "      <td>-0.049482</td>\n",
       "      <td>0.059791</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Site</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>GM_vol</th>\n",
       "      <td>-0.028381</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.787353</td>\n",
       "      <td>0.379525</td>\n",
       "      <td>0.003944</td>\n",
       "      <td>0.102340</td>\n",
       "      <td>-0.073268</td>\n",
       "      <td>0.073563</td>\n",
       "      <td>-0.070970</td>\n",
       "      <td>0.071979</td>\n",
       "      <td>0.132235</td>\n",
       "      <td>0.072555</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>WM_vol</th>\n",
       "      <td>0.006298</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.787353</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.320514</td>\n",
       "      <td>-0.300381</td>\n",
       "      <td>0.170597</td>\n",
       "      <td>0.008144</td>\n",
       "      <td>0.137438</td>\n",
       "      <td>-0.061380</td>\n",
       "      <td>0.139563</td>\n",
       "      <td>0.184362</td>\n",
       "      <td>0.015646</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>CSF_vol</th>\n",
       "      <td>0.025602</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.379525</td>\n",
       "      <td>0.320514</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.815754</td>\n",
       "      <td>-0.861811</td>\n",
       "      <td>0.088127</td>\n",
       "      <td>0.192736</td>\n",
       "      <td>-0.074343</td>\n",
       "      <td>0.049679</td>\n",
       "      <td>0.038150</td>\n",
       "      <td>0.107219</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>GM_ICVRatio</th>\n",
       "      <td>-0.056883</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.003944</td>\n",
       "      <td>-0.300381</td>\n",
       "      <td>-0.815754</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.782790</td>\n",
       "      <td>-0.160847</td>\n",
       "      <td>-0.208504</td>\n",
       "      <td>0.044206</td>\n",
       "      <td>-0.085734</td>\n",
       "      <td>-0.043626</td>\n",
       "      <td>-0.038213</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>GMWM_ICVRatio</th>\n",
       "      <td>-0.032985</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.102340</td>\n",
       "      <td>0.170597</td>\n",
       "      <td>-0.861811</td>\n",
       "      <td>0.782790</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.110314</td>\n",
       "      <td>-0.137220</td>\n",
       "      <td>0.039778</td>\n",
       "      <td>0.006395</td>\n",
       "      <td>0.052380</td>\n",
       "      <td>-0.078027</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>WMH_vol</th>\n",
       "      <td>-0.017482</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-0.073268</td>\n",
       "      <td>0.008144</td>\n",
       "      <td>0.088127</td>\n",
       "      <td>-0.160847</td>\n",
       "      <td>-0.110314</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.600963</td>\n",
       "      <td>0.096513</td>\n",
       "      <td>-0.360048</td>\n",
       "      <td>-0.442570</td>\n",
       "      <td>-0.017990</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>WMH_count</th>\n",
       "      <td>0.040220</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.073563</td>\n",
       "      <td>0.137438</td>\n",
       "      <td>0.192736</td>\n",
       "      <td>-0.208504</td>\n",
       "      <td>-0.137220</td>\n",
       "      <td>0.600963</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.017621</td>\n",
       "      <td>-0.303570</td>\n",
       "      <td>-0.333595</td>\n",
       "      <td>-0.065320</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>MeanMotion</th>\n",
       "      <td>-0.027960</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-0.070970</td>\n",
       "      <td>-0.061380</td>\n",
       "      <td>-0.074343</td>\n",
       "      <td>0.044206</td>\n",
       "      <td>0.039778</td>\n",
       "      <td>0.096513</td>\n",
       "      <td>0.017621</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.054786</td>\n",
       "      <td>0.060907</td>\n",
       "      <td>-0.031531</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>DeepWM_B</th>\n",
       "      <td>-0.081494</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.071979</td>\n",
       "      <td>0.139563</td>\n",
       "      <td>0.049679</td>\n",
       "      <td>-0.085734</td>\n",
       "      <td>0.006395</td>\n",
       "      <td>-0.360048</td>\n",
       "      <td>-0.303570</td>\n",
       "      <td>0.054786</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.742175</td>\n",
       "      <td>0.205334</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>DeepWM_L</th>\n",
       "      <td>-0.049482</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.132235</td>\n",
       "      <td>0.184362</td>\n",
       "      <td>0.038150</td>\n",
       "      <td>-0.043626</td>\n",
       "      <td>0.052380</td>\n",
       "      <td>-0.442570</td>\n",
       "      <td>-0.333595</td>\n",
       "      <td>0.060907</td>\n",
       "      <td>0.742175</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.191920</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>DeepWM_R</th>\n",
       "      <td>0.059791</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.072555</td>\n",
       "      <td>0.015646</td>\n",
       "      <td>0.107219</td>\n",
       "      <td>-0.038213</td>\n",
       "      <td>-0.078027</td>\n",
       "      <td>-0.017990</td>\n",
       "      <td>-0.065320</td>\n",
       "      <td>-0.031531</td>\n",
       "      <td>0.205334</td>\n",
       "      <td>0.191920</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "               SubjectNList  Site    GM_vol    WM_vol   CSF_vol  GM_ICVRatio   \n",
       "SubjectNList       1.000000   NaN -0.028381  0.006298  0.025602    -0.056883  \\\n",
       "Site                    NaN   NaN       NaN       NaN       NaN          NaN   \n",
       "GM_vol            -0.028381   NaN  1.000000  0.787353  0.379525     0.003944   \n",
       "WM_vol             0.006298   NaN  0.787353  1.000000  0.320514    -0.300381   \n",
       "CSF_vol            0.025602   NaN  0.379525  0.320514  1.000000    -0.815754   \n",
       "GM_ICVRatio       -0.056883   NaN  0.003944 -0.300381 -0.815754     1.000000   \n",
       "GMWM_ICVRatio     -0.032985   NaN  0.102340  0.170597 -0.861811     0.782790   \n",
       "WMH_vol           -0.017482   NaN -0.073268  0.008144  0.088127    -0.160847   \n",
       "WMH_count          0.040220   NaN  0.073563  0.137438  0.192736    -0.208504   \n",
       "MeanMotion        -0.027960   NaN -0.070970 -0.061380 -0.074343     0.044206   \n",
       "DeepWM_B          -0.081494   NaN  0.071979  0.139563  0.049679    -0.085734   \n",
       "DeepWM_L          -0.049482   NaN  0.132235  0.184362  0.038150    -0.043626   \n",
       "DeepWM_R           0.059791   NaN  0.072555  0.015646  0.107219    -0.038213   \n",
       "\n",
       "               GMWM_ICVRatio   WMH_vol  WMH_count  MeanMotion  DeepWM_B   \n",
       "SubjectNList       -0.032985 -0.017482   0.040220   -0.027960 -0.081494  \\\n",
       "Site                     NaN       NaN        NaN         NaN       NaN   \n",
       "GM_vol              0.102340 -0.073268   0.073563   -0.070970  0.071979   \n",
       "WM_vol              0.170597  0.008144   0.137438   -0.061380  0.139563   \n",
       "CSF_vol            -0.861811  0.088127   0.192736   -0.074343  0.049679   \n",
       "GM_ICVRatio         0.782790 -0.160847  -0.208504    0.044206 -0.085734   \n",
       "GMWM_ICVRatio       1.000000 -0.110314  -0.137220    0.039778  0.006395   \n",
       "WMH_vol            -0.110314  1.000000   0.600963    0.096513 -0.360048   \n",
       "WMH_count          -0.137220  0.600963   1.000000    0.017621 -0.303570   \n",
       "MeanMotion          0.039778  0.096513   0.017621    1.000000  0.054786   \n",
       "DeepWM_B            0.006395 -0.360048  -0.303570    0.054786  1.000000   \n",
       "DeepWM_L            0.052380 -0.442570  -0.333595    0.060907  0.742175   \n",
       "DeepWM_R           -0.078027 -0.017990  -0.065320   -0.031531  0.205334   \n",
       "\n",
       "               DeepWM_L  DeepWM_R  \n",
       "SubjectNList  -0.049482  0.059791  \n",
       "Site                NaN       NaN  \n",
       "GM_vol         0.132235  0.072555  \n",
       "WM_vol         0.184362  0.015646  \n",
       "CSF_vol        0.038150  0.107219  \n",
       "GM_ICVRatio   -0.043626 -0.038213  \n",
       "GMWM_ICVRatio  0.052380 -0.078027  \n",
       "WMH_vol       -0.442570 -0.017990  \n",
       "WMH_count     -0.333595 -0.065320  \n",
       "MeanMotion     0.060907 -0.031531  \n",
       "DeepWM_B       0.742175  0.205334  \n",
       "DeepWM_L       1.000000  0.191920  \n",
       "DeepWM_R       0.191920  1.000000  "
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dataframe_example_nums_only[1:].corr()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "137d1be6-c5c2-45f5-b464-a267482bb477",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:>"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "\n",
    "%matplotlib inline\n",
    "seaborn.heatmap(dataframe_example_nums_only[1:].corr(), annot = True)\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e71c6544-2e48-46dc-a927-777489a088d0",
   "metadata": {},
   "source": [
    "So we do see some correlations int his particular dataset that are strong an expected. The area of brain to ICV ratio negatively correlates with the CSF volume as should be expected. White matter and grey matter correlate pretty well. White matter hyperintensities in count correlate somewhat with white matter hyperintensity volume. And deep WM-L correlates between the sides of the brain and both. Basically everything we would expect. "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2c96de30-9010-4aba-974a-7149f117f8f8",
   "metadata": {},
   "source": [
    "So now we can make a super-dataset of all the datasets, and see if these correlations hold. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "12bf99db-96b7-4901-9b20-712cab19c466",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['participant_id',\n",
       " 'session',\n",
       " 'LongitudinalTimePoint',\n",
       " 'SubjectNList',\n",
       " 'Site',\n",
       " 'GM_vol',\n",
       " 'WM_vol',\n",
       " 'CSF_vol',\n",
       " 'GM_ICVRatio',\n",
       " 'GMWM_ICVRatio',\n",
       " 'WMH_vol',\n",
       " 'WMH_count',\n",
       " 'MeanMotion',\n",
       " 'TL_hippocampus_B',\n",
       " 'TL_hippocampus_L',\n",
       " 'TL_hippocampus_R',\n",
       " 'TL_amygdala_B',\n",
       " 'TL_amygdala_L',\n",
       " 'TL_amygdala_R',\n",
       " 'TL_anterior_temporal_lobe_medial_part_B',\n",
       " 'TL_anterior_temporal_lobe_medial_part_L',\n",
       " 'TL_anterior_temporal_lobe_medial_part_R',\n",
       " 'TL_anterior_temporal_lobe_lateral_part_B',\n",
       " 'TL_anterior_temporal_lobe_lateral_part_L',\n",
       " 'TL_anterior_temporal_lobe_lateral_part_R',\n",
       " 'TL_parahippocampal_and_ambient_gyrus_B',\n",
       " 'TL_parahippocampal_and_ambient_gyrus_L',\n",
       " 'TL_parahippocampal_and_ambient_gyrus_R',\n",
       " 'TL_superior_temporal_gyrus_middle_part_B',\n",
       " 'TL_superior_temporal_gyrus_middle_part_L',\n",
       " 'TL_superior_temporal_gyrus_middle_part_R',\n",
       " 'TL_middle_and_inferior_temporal_gyrus_B',\n",
       " 'TL_middle_and_inferior_temporal_gyrus_L',\n",
       " 'TL_middle_and_inferior_temporal_gyrus_R',\n",
       " 'TL_fusiform_gyrus_B',\n",
       " 'TL_fusiform_gyrus_L',\n",
       " 'TL_fusiform_gyrus_R',\n",
       " 'cerebellum_B',\n",
       " 'cerebellum_L',\n",
       " 'cerebellum_R',\n",
       " 'brainstem_excluding_substantia_nigra_B',\n",
       " 'brainstem_excluding_substantia_nigra_L',\n",
       " 'brainstem_excluding_substantia_nigra_R',\n",
       " 'insula_posterior_long_gyrus_B',\n",
       " 'insula_posterior_long_gyrus_L',\n",
       " 'insula_posterior_long_gyrus_R',\n",
       " 'OL_lateral_remainder_occipital_lobe_B',\n",
       " 'OL_lateral_remainder_occipital_lobe_L',\n",
       " 'OL_lateral_remainder_occipital_lobe_R',\n",
       " 'CG_anterior_cingulate_gyrus_B',\n",
       " 'CG_anterior_cingulate_gyrus_L',\n",
       " 'CG_anterior_cingulate_gyrus_R',\n",
       " 'CG_posterior_cingulate_gyrus_B',\n",
       " 'CG_posterior_cingulate_gyrus_L',\n",
       " 'CG_posterior_cingulate_gyrus_R',\n",
       " 'FL_middle_frontal_gyrus_B',\n",
       " 'FL_middle_frontal_gyrus_L',\n",
       " 'FL_middle_frontal_gyrus_R',\n",
       " 'TL_posterior_temporal_lobe_B',\n",
       " 'TL_posterior_temporal_lobe_L',\n",
       " 'TL_posterior_temporal_lobe_R',\n",
       " 'PL_angular_gyrus_B',\n",
       " 'PL_angular_gyrus_L',\n",
       " 'PL_angular_gyrus_R',\n",
       " 'caudate_nucleus_B',\n",
       " 'caudate_nucleus_L',\n",
       " 'caudate_nucleus_R',\n",
       " 'nucleus_accumbens_B',\n",
       " 'nucleus_accumbens_L',\n",
       " 'nucleus_accumbens_R',\n",
       " 'putamen_B',\n",
       " 'putamen_L',\n",
       " 'putamen_R',\n",
       " 'thalamus_B',\n",
       " 'thalamus_L',\n",
       " 'thalamus_R',\n",
       " 'pallidum_B',\n",
       " 'pallidum_L',\n",
       " 'pallidum_R',\n",
       " 'corpus_callosum_B',\n",
       " 'corpus_callosum_L',\n",
       " 'corpus_callosum_R',\n",
       " 'Lateral_ventricle_excluding_temporal_horn_B',\n",
       " 'Lateral_ventricle_excluding_temporal_horn_L',\n",
       " 'Lateral_ventricle_excluding_temporal_horn_R',\n",
       " 'Lateral_ventricle_temporal_horn_B',\n",
       " 'Lateral_ventricle_temporal_horn_L',\n",
       " 'Lateral_ventricle_temporal_horn_R',\n",
       " 'Third_ventricle_B',\n",
       " 'Third_ventricle_L',\n",
       " 'Third_ventricle_R',\n",
       " 'FL_precentral_gyrus_B',\n",
       " 'FL_precentral_gyrus_L',\n",
       " 'FL_precentral_gyrus_R',\n",
       " 'FL_straight_gyrus_B',\n",
       " 'FL_straight_gyrus_L',\n",
       " 'FL_straight_gyrus_R',\n",
       " 'FL_anterior_orbital_gyrus_B',\n",
       " 'FL_anterior_orbital_gyrus_L',\n",
       " 'FL_anterior_orbital_gyrus_R',\n",
       " 'FL_inferior_frontal_gyrus_B',\n",
       " 'FL_inferior_frontal_gyrus_L',\n",
       " 'FL_inferior_frontal_gyrus_R',\n",
       " 'FL_superior_frontal_gyrus_B',\n",
       " 'FL_superior_frontal_gyrus_L',\n",
       " 'FL_superior_frontal_gyrus_R',\n",
       " 'PL_postcentral_gyrus_B',\n",
       " 'PL_postcentral_gyrus_L',\n",
       " 'PL_postcentral_gyrus_R',\n",
       " 'PL_superior_parietal_gyrus_B',\n",
       " 'PL_superior_parietal_gyrus_L',\n",
       " 'PL_superior_parietal_gyrus_R',\n",
       " 'OL_lingual_gyrus_B',\n",
       " 'OL_lingual_gyrus_L',\n",
       " 'OL_lingual_gyrus_R',\n",
       " 'OL_cuneus_B',\n",
       " 'OL_cuneus_L',\n",
       " 'OL_cuneus_R',\n",
       " 'FL_medial_orbital_gyrus_B',\n",
       " 'FL_medial_orbital_gyrus_L',\n",
       " 'FL_medial_orbital_gyrus_R',\n",
       " 'FL_lateral_orbital_gyrus_B',\n",
       " 'FL_lateral_orbital_gyrus_L',\n",
       " 'FL_lateral_orbital_gyrus_R',\n",
       " 'FL_posterior_orbital_gyrus_B',\n",
       " 'FL_posterior_orbital_gyrus_L',\n",
       " 'FL_posterior_orbital_gyrus_R',\n",
       " 'substantia_nigra_B',\n",
       " 'substantia_nigra_L',\n",
       " 'substantia_nigra_R',\n",
       " 'FL_subgenual_frontal_cortex_B',\n",
       " 'FL_subgenual_frontal_cortex_L',\n",
       " 'FL_subgenual_frontal_cortex_R',\n",
       " 'FL_subcallosal_area_B',\n",
       " 'FL_subcallosal_area_L',\n",
       " 'FL_subcallosal_area_R',\n",
       " 'FL_pre-subgenual_frontal_cortex_B',\n",
       " 'FL_pre-subgenual_frontal_cortex_L',\n",
       " 'FL_pre-subgenual_frontal_cortex_R',\n",
       " 'TL_superior_temporal_gyrus_anterior_part_B',\n",
       " 'TL_superior_temporal_gyrus_anterior_part_L',\n",
       " 'TL_superior_temporal_gyrus_anterior_part_R',\n",
       " 'PL_supramarginal_gyrus_B',\n",
       " 'PL_supramarginal_gyrus_L',\n",
       " 'PL_supramarginal_gyrus_R',\n",
       " 'insula_anterior_short_gyrus_B',\n",
       " 'insula_anterior_short_gyrus_L',\n",
       " 'insula_anterior_short_gyrus_R',\n",
       " 'insula_middle_short_gyrus_B',\n",
       " 'insula_middle_short_gyrus_L',\n",
       " 'insula_middle_short_gyrus_R',\n",
       " 'insula_posterior_short_gyrus_B',\n",
       " 'insula_posterior_short_gyrus_L',\n",
       " 'insula_posterior_short_gyrus_R',\n",
       " 'insula_anterior_inferior_cortex_B',\n",
       " 'insula_anterior_inferior_cortex_L',\n",
       " 'insula_anterior_inferior_cortex_R',\n",
       " 'insula_anterior_long_gyrus_B',\n",
       " 'insula_anterior_long_gyrus_L',\n",
       " 'insula_anterior_long_gyrus_R']"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dataframe_example2 = pd.read_csv(tsv_files[1], sep='\\t')\n",
    "dataframe_example2.columns.to_list()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "caf537e8-fbdd-49f5-9d81-cb2df5a1c0a5",
   "metadata": {},
   "source": [
    "More elements than first...let's see what we have in common between the two tsv:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "47f6dec4-a4f7-4abb-959c-858c501f2969",
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "first = set(dataframe_example.columns.to_list())\n",
    "second = set(dataframe_example2.columns.to_list())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "635f76b0-4ff2-42fc-ad48-4b31545a4c6d",
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "not_common2 =  list(set(dataframe_example2.columns.to_list()) - set(dataframe_example.columns.to_list()))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "617e369d-fede-4987-bcc2-12f22543715b",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['WM_vol',\n",
       " 'GM_ICVRatio',\n",
       " 'Site',\n",
       " 'CSF_vol',\n",
       " 'session',\n",
       " 'participant_id',\n",
       " 'MeanMotion',\n",
       " 'LongitudinalTimePoint',\n",
       " 'GM_vol',\n",
       " 'WMH_vol',\n",
       " 'GMWM_ICVRatio',\n",
       " 'WMH_count',\n",
       " 'SubjectNList']"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "shared = list(first.intersection(second))\n",
    "shared"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4179269c-4fd9-4a0d-97c0-f35876940051",
   "metadata": {},
   "source": [
    "Not a lot...let's look at what we have in common in all or most of the tsv"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "f06bc6ab-642a-483c-8422-a699cb0d42de",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[16, 160, 22, 40, 16, 16, 160, 22, 40, 16, 17, 17, 17, 17, 15, 15, 15, 15, 15, 21, 39, 15, 15, 21, 39, 15, 1]\n"
     ]
    }
   ],
   "source": [
    "name_file = []\n",
    "longlesses = []\n",
    "for file in tsv_files:\n",
    "    dataframe_example = pd.read_csv(file, sep='\\t')\n",
    "    longness = len(dataframe_example.columns)\n",
    "    name_file.append(file)\n",
    "    longlesses.append(longness)\n",
    "data_tsv = pd.DataFrame([name_file, longlesses])        \n",
    "print(longlesses)        "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "12fa16c5-dd9b-45b2-ae32-9a4b058562ba",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "      <th>2</th>\n",
       "      <th>3</th>\n",
       "      <th>4</th>\n",
       "      <th>5</th>\n",
       "      <th>6</th>\n",
       "      <th>7</th>\n",
       "      <th>8</th>\n",
       "      <th>9</th>\n",
       "      <th>...</th>\n",
       "      <th>17</th>\n",
       "      <th>18</th>\n",
       "      <th>19</th>\n",
       "      <th>20</th>\n",
       "      <th>21</th>\n",
       "      <th>22</th>\n",
       "      <th>23</th>\n",
       "      <th>24</th>\n",
       "      <th>25</th>\n",
       "      <th>26</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>C:/Projects/brainspin/not_pushed/data_anonymiz...</td>\n",
       "      <td>C:/Projects/brainspin/not_pushed/data_anonymiz...</td>\n",
       "      <td>C:/Projects/brainspin/not_pushed/data_anonymiz...</td>\n",
       "      <td>C:/Projects/brainspin/not_pushed/data_anonymiz...</td>\n",
       "      <td>C:/Projects/brainspin/not_pushed/data_anonymiz...</td>\n",
       "      <td>C:/Projects/brainspin/not_pushed/data_anonymiz...</td>\n",
       "      <td>C:/Projects/brainspin/not_pushed/data_anonymiz...</td>\n",
       "      <td>C:/Projects/brainspin/not_pushed/data_anonymiz...</td>\n",
       "      <td>C:/Projects/brainspin/not_pushed/data_anonymiz...</td>\n",
       "      <td>C:/Projects/brainspin/not_pushed/data_anonymiz...</td>\n",
       "      <td>...</td>\n",
       "      <td>C:/Projects/brainspin/not_pushed/data_anonymiz...</td>\n",
       "      <td>C:/Projects/brainspin/not_pushed/data_anonymiz...</td>\n",
       "      <td>C:/Projects/brainspin/not_pushed/data_anonymiz...</td>\n",
       "      <td>C:/Projects/brainspin/not_pushed/data_anonymiz...</td>\n",
       "      <td>C:/Projects/brainspin/not_pushed/data_anonymiz...</td>\n",
       "      <td>C:/Projects/brainspin/not_pushed/data_anonymiz...</td>\n",
       "      <td>C:/Projects/brainspin/not_pushed/data_anonymiz...</td>\n",
       "      <td>C:/Projects/brainspin/not_pushed/data_anonymiz...</td>\n",
       "      <td>C:/Projects/brainspin/not_pushed/data_anonymiz...</td>\n",
       "      <td>C:/Projects/brainspin/not_pushed/data_anonymiz...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>16</td>\n",
       "      <td>160</td>\n",
       "      <td>22</td>\n",
       "      <td>40</td>\n",
       "      <td>16</td>\n",
       "      <td>16</td>\n",
       "      <td>160</td>\n",
       "      <td>22</td>\n",
       "      <td>40</td>\n",
       "      <td>16</td>\n",
       "      <td>...</td>\n",
       "      <td>15</td>\n",
       "      <td>15</td>\n",
       "      <td>21</td>\n",
       "      <td>39</td>\n",
       "      <td>15</td>\n",
       "      <td>15</td>\n",
       "      <td>21</td>\n",
       "      <td>39</td>\n",
       "      <td>15</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>2 rows × 27 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                  0    \n",
       "0  C:/Projects/brainspin/not_pushed/data_anonymiz...  \\\n",
       "1                                                 16   \n",
       "\n",
       "                                                  1    \n",
       "0  C:/Projects/brainspin/not_pushed/data_anonymiz...  \\\n",
       "1                                                160   \n",
       "\n",
       "                                                  2    \n",
       "0  C:/Projects/brainspin/not_pushed/data_anonymiz...  \\\n",
       "1                                                 22   \n",
       "\n",
       "                                                  3    \n",
       "0  C:/Projects/brainspin/not_pushed/data_anonymiz...  \\\n",
       "1                                                 40   \n",
       "\n",
       "                                                  4    \n",
       "0  C:/Projects/brainspin/not_pushed/data_anonymiz...  \\\n",
       "1                                                 16   \n",
       "\n",
       "                                                  5    \n",
       "0  C:/Projects/brainspin/not_pushed/data_anonymiz...  \\\n",
       "1                                                 16   \n",
       "\n",
       "                                                  6    \n",
       "0  C:/Projects/brainspin/not_pushed/data_anonymiz...  \\\n",
       "1                                                160   \n",
       "\n",
       "                                                  7    \n",
       "0  C:/Projects/brainspin/not_pushed/data_anonymiz...  \\\n",
       "1                                                 22   \n",
       "\n",
       "                                                  8    \n",
       "0  C:/Projects/brainspin/not_pushed/data_anonymiz...  \\\n",
       "1                                                 40   \n",
       "\n",
       "                                                  9   ...   \n",
       "0  C:/Projects/brainspin/not_pushed/data_anonymiz...  ...  \\\n",
       "1                                                 16  ...   \n",
       "\n",
       "                                                  17   \n",
       "0  C:/Projects/brainspin/not_pushed/data_anonymiz...  \\\n",
       "1                                                 15   \n",
       "\n",
       "                                                  18   \n",
       "0  C:/Projects/brainspin/not_pushed/data_anonymiz...  \\\n",
       "1                                                 15   \n",
       "\n",
       "                                                  19   \n",
       "0  C:/Projects/brainspin/not_pushed/data_anonymiz...  \\\n",
       "1                                                 21   \n",
       "\n",
       "                                                  20   \n",
       "0  C:/Projects/brainspin/not_pushed/data_anonymiz...  \\\n",
       "1                                                 39   \n",
       "\n",
       "                                                  21   \n",
       "0  C:/Projects/brainspin/not_pushed/data_anonymiz...  \\\n",
       "1                                                 15   \n",
       "\n",
       "                                                  22   \n",
       "0  C:/Projects/brainspin/not_pushed/data_anonymiz...  \\\n",
       "1                                                 15   \n",
       "\n",
       "                                                  23   \n",
       "0  C:/Projects/brainspin/not_pushed/data_anonymiz...  \\\n",
       "1                                                 21   \n",
       "\n",
       "                                                  24   \n",
       "0  C:/Projects/brainspin/not_pushed/data_anonymiz...  \\\n",
       "1                                                 39   \n",
       "\n",
       "                                                  25   \n",
       "0  C:/Projects/brainspin/not_pushed/data_anonymiz...  \\\n",
       "1                                                 15   \n",
       "\n",
       "                                                  26  \n",
       "0  C:/Projects/brainspin/not_pushed/data_anonymiz...  \n",
       "1                                                  1  \n",
       "\n",
       "[2 rows x 27 columns]"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data_tsv"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2e6b7e82-abb2-451e-b922-807038b0a974",
   "metadata": {},
   "source": [
    "So There may be 15 common features on most as a guess. We need to not look at the last on the list."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "8cd0160e-0a74-49f2-9a7c-5f33ccb0dd1f",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['C:/Projects/brainspin/not_pushed/data_anonymized\\\\Insight46\\\\CoV_qCBF_StandardSpace_DeepWM_n=1670_29-Sep-2022_PVC2.tsv', 'C:/Projects/brainspin/not_pushed/data_anonymized\\\\Insight46\\\\CoV_qCBF_StandardSpace_Hammers_n=1670_29-Sep-2022_PVC2.tsv', 'C:/Projects/brainspin/not_pushed/data_anonymized\\\\Insight46\\\\CoV_qCBF_StandardSpace_Tatu_ACA_MCA_PCA_n=1670_29-Sep-2022_PVC2.tsv', 'C:/Projects/brainspin/not_pushed/data_anonymized\\\\Insight46\\\\CoV_qCBF_StandardSpace_Tatu_ACA_MCA_PCA_Prox_Med_Dist_n=1670_29-Sep-2022_PVC2.tsv', 'C:/Projects/brainspin/not_pushed/data_anonymized\\\\Insight46\\\\CoV_qCBF_StandardSpace_TotalGM_n=1670_29-Sep-2022_PVC2.tsv', 'C:/Projects/brainspin/not_pushed/data_anonymized\\\\Insight46\\\\mean_qCBF_StandardSpace_DeepWM_n=1670_29-Sep-2022_PVC2.tsv', 'C:/Projects/brainspin/not_pushed/data_anonymized\\\\Insight46\\\\mean_qCBF_StandardSpace_Hammers_n=1670_29-Sep-2022_PVC2.tsv', 'C:/Projects/brainspin/not_pushed/data_anonymized\\\\Insight46\\\\mean_qCBF_StandardSpace_Tatu_ACA_MCA_PCA_n=1670_29-Sep-2022_PVC2.tsv', 'C:/Projects/brainspin/not_pushed/data_anonymized\\\\Insight46\\\\mean_qCBF_StandardSpace_Tatu_ACA_MCA_PCA_Prox_Med_Dist_n=1670_29-Sep-2022_PVC2.tsv', 'C:/Projects/brainspin/not_pushed/data_anonymized\\\\Insight46\\\\mean_qCBF_StandardSpace_TotalGM_n=1670_29-Sep-2022_PVC2.tsv', 'C:/Projects/brainspin/not_pushed/data_anonymized\\\\SABRE\\\\CoV_qCBF_StandardSpace_DeepWM_n=753_11-Mar-2021_PVC2.tsv', 'C:/Projects/brainspin/not_pushed/data_anonymized\\\\SABRE\\\\CoV_qCBF_StandardSpace_TotalGM_n=753_11-Mar-2021_PVC2.tsv', 'C:/Projects/brainspin/not_pushed/data_anonymized\\\\SABRE\\\\mean_qCBF_StandardSpace_DeepWM_n=753_11-Mar-2021_PVC2.tsv', 'C:/Projects/brainspin/not_pushed/data_anonymized\\\\SABRE\\\\mean_qCBF_StandardSpace_TotalGM_n=753_11-Mar-2021_PVC2.tsv', 'C:/Projects/brainspin/not_pushed/data_anonymized\\\\StrokeMRI\\\\CoV_qCBF_StandardSpace_DeepWM_n=589_13-Jan-2023_PVC2.tsv', 'C:/Projects/brainspin/not_pushed/data_anonymized\\\\StrokeMRI\\\\CoV_qCBF_StandardSpace_TotalGM_n=589_13-Jan-2023_PVC2.tsv', 'C:/Projects/brainspin/not_pushed/data_anonymized\\\\StrokeMRI\\\\mean_qCBF_StandardSpace_DeepWM_n=589_13-Jan-2023_PVC2.tsv', 'C:/Projects/brainspin/not_pushed/data_anonymized\\\\StrokeMRI\\\\mean_qCBF_StandardSpace_TotalGM_n=589_13-Jan-2023_PVC2.tsv', 'C:/Projects/brainspin/not_pushed/data_anonymized\\\\TOP\\\\CoV_qCBF_StandardSpace_DeepWM_n=895_06-Feb-2023_PVC2.tsv', 'C:/Projects/brainspin/not_pushed/data_anonymized\\\\TOP\\\\CoV_qCBF_StandardSpace_Tatu_ACA_MCA_PCA_n=895_06-Feb-2023_PVC2.tsv', 'C:/Projects/brainspin/not_pushed/data_anonymized\\\\TOP\\\\CoV_qCBF_StandardSpace_Tatu_ACA_MCA_PCA_Prox_Med_Dist_n=895_06-Feb-2023_PVC2.tsv', 'C:/Projects/brainspin/not_pushed/data_anonymized\\\\TOP\\\\CoV_qCBF_StandardSpace_TotalGM_n=895_06-Feb-2023_PVC2.tsv', 'C:/Projects/brainspin/not_pushed/data_anonymized\\\\TOP\\\\mean_qCBF_StandardSpace_DeepWM_n=895_06-Feb-2023_PVC2.tsv', 'C:/Projects/brainspin/not_pushed/data_anonymized\\\\TOP\\\\mean_qCBF_StandardSpace_Tatu_ACA_MCA_PCA_n=895_06-Feb-2023_PVC2.tsv', 'C:/Projects/brainspin/not_pushed/data_anonymized\\\\TOP\\\\mean_qCBF_StandardSpace_Tatu_ACA_MCA_PCA_Prox_Med_Dist_n=895_06-Feb-2023_PVC2.tsv', 'C:/Projects/brainspin/not_pushed/data_anonymized\\\\TOP\\\\mean_qCBF_StandardSpace_TotalGM_n=895_06-Feb-2023_PVC2.tsv']\n"
     ]
    }
   ],
   "source": [
    "print(name_file[:-1])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "90d0dd1a-4051-416b-98e4-40303eda9d83",
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "set_of_relevant_files = name_file[:-1]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "id": "0bcbf919-7704-4384-906f-a673b6a8fca0",
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "name_file = []\n",
    "longlesses = []\n",
    "intersections = []\n",
    "len_intersections = []\n",
    "for file in set_of_relevant_files:\n",
    "    dataframe_example = pd.read_csv(file, sep='\\t')\n",
    "    longness = len(dataframe_example.columns)\n",
    "    name_file.append(file)\n",
    "    longlesses.append(longness)\n",
    "    dataframe_example2 = pd.read_csv(file, sep='\\t')\n",
    "    columns = dataframe_example2.columns.to_list()\n",
    "    intersection = set(columns).intersection(second)\n",
    "    intersections.append(intersection)\n",
    "    len_intersections.append(len(intersection))\n",
    "data_tsv = pd.DataFrame([name_file, longlesses, len_intersections, intersections])         "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "id": "28d8bcb0-f5b4-4fe2-9c74-0f87613516bc",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "      <th>2</th>\n",
       "      <th>3</th>\n",
       "      <th>4</th>\n",
       "      <th>5</th>\n",
       "      <th>6</th>\n",
       "      <th>7</th>\n",
       "      <th>8</th>\n",
       "      <th>9</th>\n",
       "      <th>...</th>\n",
       "      <th>16</th>\n",
       "      <th>17</th>\n",
       "      <th>18</th>\n",
       "      <th>19</th>\n",
       "      <th>20</th>\n",
       "      <th>21</th>\n",
       "      <th>22</th>\n",
       "      <th>23</th>\n",
       "      <th>24</th>\n",
       "      <th>25</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>C:/Projects/brainspin/not_pushed/data_anonymiz...</td>\n",
       "      <td>C:/Projects/brainspin/not_pushed/data_anonymiz...</td>\n",
       "      <td>C:/Projects/brainspin/not_pushed/data_anonymiz...</td>\n",
       "      <td>C:/Projects/brainspin/not_pushed/data_anonymiz...</td>\n",
       "      <td>C:/Projects/brainspin/not_pushed/data_anonymiz...</td>\n",
       "      <td>C:/Projects/brainspin/not_pushed/data_anonymiz...</td>\n",
       "      <td>C:/Projects/brainspin/not_pushed/data_anonymiz...</td>\n",
       "      <td>C:/Projects/brainspin/not_pushed/data_anonymiz...</td>\n",
       "      <td>C:/Projects/brainspin/not_pushed/data_anonymiz...</td>\n",
       "      <td>C:/Projects/brainspin/not_pushed/data_anonymiz...</td>\n",
       "      <td>...</td>\n",
       "      <td>C:/Projects/brainspin/not_pushed/data_anonymiz...</td>\n",
       "      <td>C:/Projects/brainspin/not_pushed/data_anonymiz...</td>\n",
       "      <td>C:/Projects/brainspin/not_pushed/data_anonymiz...</td>\n",
       "      <td>C:/Projects/brainspin/not_pushed/data_anonymiz...</td>\n",
       "      <td>C:/Projects/brainspin/not_pushed/data_anonymiz...</td>\n",
       "      <td>C:/Projects/brainspin/not_pushed/data_anonymiz...</td>\n",
       "      <td>C:/Projects/brainspin/not_pushed/data_anonymiz...</td>\n",
       "      <td>C:/Projects/brainspin/not_pushed/data_anonymiz...</td>\n",
       "      <td>C:/Projects/brainspin/not_pushed/data_anonymiz...</td>\n",
       "      <td>C:/Projects/brainspin/not_pushed/data_anonymiz...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>16</td>\n",
       "      <td>160</td>\n",
       "      <td>22</td>\n",
       "      <td>40</td>\n",
       "      <td>16</td>\n",
       "      <td>16</td>\n",
       "      <td>160</td>\n",
       "      <td>22</td>\n",
       "      <td>40</td>\n",
       "      <td>16</td>\n",
       "      <td>...</td>\n",
       "      <td>15</td>\n",
       "      <td>15</td>\n",
       "      <td>15</td>\n",
       "      <td>21</td>\n",
       "      <td>39</td>\n",
       "      <td>15</td>\n",
       "      <td>15</td>\n",
       "      <td>21</td>\n",
       "      <td>39</td>\n",
       "      <td>15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>13</td>\n",
       "      <td>160</td>\n",
       "      <td>13</td>\n",
       "      <td>13</td>\n",
       "      <td>13</td>\n",
       "      <td>13</td>\n",
       "      <td>160</td>\n",
       "      <td>13</td>\n",
       "      <td>13</td>\n",
       "      <td>13</td>\n",
       "      <td>...</td>\n",
       "      <td>12</td>\n",
       "      <td>12</td>\n",
       "      <td>12</td>\n",
       "      <td>12</td>\n",
       "      <td>12</td>\n",
       "      <td>12</td>\n",
       "      <td>12</td>\n",
       "      <td>12</td>\n",
       "      <td>12</td>\n",
       "      <td>12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>{WM_vol, GM_ICVRatio, Site, CSF_vol, session, ...</td>\n",
       "      <td>{FL_anterior_orbital_gyrus_B, FL_superior_fron...</td>\n",
       "      <td>{WM_vol, GM_ICVRatio, Site, CSF_vol, session, ...</td>\n",
       "      <td>{WM_vol, GM_ICVRatio, Site, CSF_vol, session, ...</td>\n",
       "      <td>{WM_vol, GM_ICVRatio, Site, CSF_vol, session, ...</td>\n",
       "      <td>{WM_vol, GM_ICVRatio, Site, CSF_vol, session, ...</td>\n",
       "      <td>{FL_anterior_orbital_gyrus_B, FL_superior_fron...</td>\n",
       "      <td>{WM_vol, GM_ICVRatio, Site, CSF_vol, session, ...</td>\n",
       "      <td>{WM_vol, GM_ICVRatio, Site, CSF_vol, session, ...</td>\n",
       "      <td>{WM_vol, GM_ICVRatio, Site, CSF_vol, session, ...</td>\n",
       "      <td>...</td>\n",
       "      <td>{WM_vol, GM_ICVRatio, Site, CSF_vol, session, ...</td>\n",
       "      <td>{WM_vol, GM_ICVRatio, Site, CSF_vol, session, ...</td>\n",
       "      <td>{WM_vol, GM_ICVRatio, Site, CSF_vol, session, ...</td>\n",
       "      <td>{WM_vol, GM_ICVRatio, Site, CSF_vol, session, ...</td>\n",
       "      <td>{WM_vol, GM_ICVRatio, Site, CSF_vol, session, ...</td>\n",
       "      <td>{WM_vol, GM_ICVRatio, Site, CSF_vol, session, ...</td>\n",
       "      <td>{WM_vol, GM_ICVRatio, Site, CSF_vol, session, ...</td>\n",
       "      <td>{WM_vol, GM_ICVRatio, Site, CSF_vol, session, ...</td>\n",
       "      <td>{WM_vol, GM_ICVRatio, Site, CSF_vol, session, ...</td>\n",
       "      <td>{WM_vol, GM_ICVRatio, Site, CSF_vol, session, ...</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>4 rows × 26 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                  0    \n",
       "0  C:/Projects/brainspin/not_pushed/data_anonymiz...  \\\n",
       "1                                                 16   \n",
       "2                                                 13   \n",
       "3  {WM_vol, GM_ICVRatio, Site, CSF_vol, session, ...   \n",
       "\n",
       "                                                  1    \n",
       "0  C:/Projects/brainspin/not_pushed/data_anonymiz...  \\\n",
       "1                                                160   \n",
       "2                                                160   \n",
       "3  {FL_anterior_orbital_gyrus_B, FL_superior_fron...   \n",
       "\n",
       "                                                  2    \n",
       "0  C:/Projects/brainspin/not_pushed/data_anonymiz...  \\\n",
       "1                                                 22   \n",
       "2                                                 13   \n",
       "3  {WM_vol, GM_ICVRatio, Site, CSF_vol, session, ...   \n",
       "\n",
       "                                                  3    \n",
       "0  C:/Projects/brainspin/not_pushed/data_anonymiz...  \\\n",
       "1                                                 40   \n",
       "2                                                 13   \n",
       "3  {WM_vol, GM_ICVRatio, Site, CSF_vol, session, ...   \n",
       "\n",
       "                                                  4    \n",
       "0  C:/Projects/brainspin/not_pushed/data_anonymiz...  \\\n",
       "1                                                 16   \n",
       "2                                                 13   \n",
       "3  {WM_vol, GM_ICVRatio, Site, CSF_vol, session, ...   \n",
       "\n",
       "                                                  5    \n",
       "0  C:/Projects/brainspin/not_pushed/data_anonymiz...  \\\n",
       "1                                                 16   \n",
       "2                                                 13   \n",
       "3  {WM_vol, GM_ICVRatio, Site, CSF_vol, session, ...   \n",
       "\n",
       "                                                  6    \n",
       "0  C:/Projects/brainspin/not_pushed/data_anonymiz...  \\\n",
       "1                                                160   \n",
       "2                                                160   \n",
       "3  {FL_anterior_orbital_gyrus_B, FL_superior_fron...   \n",
       "\n",
       "                                                  7    \n",
       "0  C:/Projects/brainspin/not_pushed/data_anonymiz...  \\\n",
       "1                                                 22   \n",
       "2                                                 13   \n",
       "3  {WM_vol, GM_ICVRatio, Site, CSF_vol, session, ...   \n",
       "\n",
       "                                                  8    \n",
       "0  C:/Projects/brainspin/not_pushed/data_anonymiz...  \\\n",
       "1                                                 40   \n",
       "2                                                 13   \n",
       "3  {WM_vol, GM_ICVRatio, Site, CSF_vol, session, ...   \n",
       "\n",
       "                                                  9   ...   \n",
       "0  C:/Projects/brainspin/not_pushed/data_anonymiz...  ...  \\\n",
       "1                                                 16  ...   \n",
       "2                                                 13  ...   \n",
       "3  {WM_vol, GM_ICVRatio, Site, CSF_vol, session, ...  ...   \n",
       "\n",
       "                                                  16   \n",
       "0  C:/Projects/brainspin/not_pushed/data_anonymiz...  \\\n",
       "1                                                 15   \n",
       "2                                                 12   \n",
       "3  {WM_vol, GM_ICVRatio, Site, CSF_vol, session, ...   \n",
       "\n",
       "                                                  17   \n",
       "0  C:/Projects/brainspin/not_pushed/data_anonymiz...  \\\n",
       "1                                                 15   \n",
       "2                                                 12   \n",
       "3  {WM_vol, GM_ICVRatio, Site, CSF_vol, session, ...   \n",
       "\n",
       "                                                  18   \n",
       "0  C:/Projects/brainspin/not_pushed/data_anonymiz...  \\\n",
       "1                                                 15   \n",
       "2                                                 12   \n",
       "3  {WM_vol, GM_ICVRatio, Site, CSF_vol, session, ...   \n",
       "\n",
       "                                                  19   \n",
       "0  C:/Projects/brainspin/not_pushed/data_anonymiz...  \\\n",
       "1                                                 21   \n",
       "2                                                 12   \n",
       "3  {WM_vol, GM_ICVRatio, Site, CSF_vol, session, ...   \n",
       "\n",
       "                                                  20   \n",
       "0  C:/Projects/brainspin/not_pushed/data_anonymiz...  \\\n",
       "1                                                 39   \n",
       "2                                                 12   \n",
       "3  {WM_vol, GM_ICVRatio, Site, CSF_vol, session, ...   \n",
       "\n",
       "                                                  21   \n",
       "0  C:/Projects/brainspin/not_pushed/data_anonymiz...  \\\n",
       "1                                                 15   \n",
       "2                                                 12   \n",
       "3  {WM_vol, GM_ICVRatio, Site, CSF_vol, session, ...   \n",
       "\n",
       "                                                  22   \n",
       "0  C:/Projects/brainspin/not_pushed/data_anonymiz...  \\\n",
       "1                                                 15   \n",
       "2                                                 12   \n",
       "3  {WM_vol, GM_ICVRatio, Site, CSF_vol, session, ...   \n",
       "\n",
       "                                                  23   \n",
       "0  C:/Projects/brainspin/not_pushed/data_anonymiz...  \\\n",
       "1                                                 21   \n",
       "2                                                 12   \n",
       "3  {WM_vol, GM_ICVRatio, Site, CSF_vol, session, ...   \n",
       "\n",
       "                                                  24   \n",
       "0  C:/Projects/brainspin/not_pushed/data_anonymiz...  \\\n",
       "1                                                 39   \n",
       "2                                                 12   \n",
       "3  {WM_vol, GM_ICVRatio, Site, CSF_vol, session, ...   \n",
       "\n",
       "                                                  25  \n",
       "0  C:/Projects/brainspin/not_pushed/data_anonymiz...  \n",
       "1                                                 15  \n",
       "2                                                 12  \n",
       "3  {WM_vol, GM_ICVRatio, Site, CSF_vol, session, ...  \n",
       "\n",
       "[4 rows x 26 columns]"
      ]
     },
     "execution_count": 47,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data_tsv"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3ca2b855-8e9a-4120-8156-4867cb95b505",
   "metadata": {},
   "source": [
    "So we will have twelve or thireen common elements we can compare.Let's look at hope they are about the same."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "id": "5e19bec9-e86c-4f60-a34c-92d3e008c87e",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'CSF_vol',\n",
       " 'GMWM_ICVRatio',\n",
       " 'GM_ICVRatio',\n",
       " 'GM_vol',\n",
       " 'LongitudinalTimePoint',\n",
       " 'MeanMotion',\n",
       " 'Site',\n",
       " 'SubjectNList',\n",
       " 'WMH_count',\n",
       " 'WMH_vol',\n",
       " 'WM_vol',\n",
       " 'participant_id',\n",
       " 'session'}"
      ]
     },
     "execution_count": 50,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data_tsv[0][3]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "id": "3dab0ec2-b9ad-47f1-b24d-61889c616dee",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'CSF_vol',\n",
       " 'GMWM_ICVRatio',\n",
       " 'GM_ICVRatio',\n",
       " 'GM_vol',\n",
       " 'LongitudinalTimePoint',\n",
       " 'MeanMotion',\n",
       " 'Site',\n",
       " 'SubjectNList',\n",
       " 'WMH_count',\n",
       " 'WMH_vol',\n",
       " 'WM_vol',\n",
       " 'participant_id',\n",
       " 'session'}"
      ]
     },
     "execution_count": 51,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data_tsv[2][3]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "768dee6a-2ac0-461b-9e45-e4afe0848658",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.16"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
